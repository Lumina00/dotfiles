#!/bin/bash

WiFiSignal=$(awk 'NR==3 {printf("%.0f",$3*10/7)}' /proc/net/wireless)
vpn=$(nmcli con show --active | grep -e vpn -e wireguard | awk '{print $1}')

wiredstatus=false
bluetoothstatus=false

connection() {
	nm=$(nmcli con show --active | grep $1 | awk '{print $1}')
	echo ${nm} 
}

connect() {
	isWiredconnect
	isBluetoothconnect
	iswificonnect
}

isWiredconnect() {
	local wired=$(connection ethernet)
	if [[ -n "$wired" ]]; then
		wiredstatus=true
	fi
}

isBluetoothconnect() {
	local bluetooth=$(connection bluetooth)
	if [[ -n "$bluetooth" ]]; then
		bluetoothstatus=true 
	fi 
}

iswificonnect() {
	if [[ $(nmcli net con) == "none" ]]; then 
		echo "Airplane"
		return 0
	fi
	if [[ $wiredstatus == "true" ]]; then
		echo "Ethernet"
		return 0
	
	elif [[ $bluetoothstatus == "true" ]]; then
		echo "Bluetooth"
		return 0
	fi

	local wifi=$(connection wifi)
	if [[ -z "$wifi" ]]; then
		echo "Disconnected"
	else 
		echo ${wifi}
	fi
}

vpn () {
	isVPNconnect 
}

isVPNconnect () {
	if [ -n "$vpn" ]; then 
		echo $vpn
	else 
		echo "Disconnected"
	fi

}

toggle () {
	#local connectivity=$(connect) 
	if [ $(connect) == "Airplane" ]; then
		nmcli net on
	else 
		nmcli net off 
	fi 
}
	
icon() {
	isWiredconnect

	if [[ "$wiredstatus" == "true" ]]; then
		echo ""
	elif [[ "$bluetoothstatus" == "true" ]]; then
		echo "󰂴"
	elif [[ "$WiFiSignal" -ge "75" ]]; then
		echo "󰤨"
    elif [[ "$WiFiSignal" -ge "50" ]] && [[ "$WiFiSignal" -lt "75" ]]; then
        echo "󰤥"
    elif [[ "$WiFiSignal" -ge "25" ]] && [[ "$WiFiSignal" -lt "50" ]]; then
        echo "󰤢"
    elif [[ "$WiFiSignal" -ge "1" ]] && [[ "$WiFiSignal" -lt "25" ]]; then
        echo "󰤟"
    else
        echo "󰤮"
    fi
}


if [[ $1 = "--state" ]]; then
	echo "[\"$(connect)\",\"$(icon)\"]"
elif [[ $1 = "--vpn" ]]; then
	vpn
elif [[ $1 = "--toggle" ]]; then
	toggle
fi
