(defpoll battery :interval "1m" "./scripts/battery --bat")

(defpoll notif_icon :interval "15s" "./scripts/notifs notifs")
(defpoll notif_col :interval "15s" "scripts/notifs notifs_col")
(defpoll notif_bg :interval "17s" "scripts/notifs notifs_bg")

(defvar duration "250ms")
(defvar music_rev false)
(defvar music-bar_rev false)
(defvar volume-bar_rev false)
(defvar volume_rev false)
(defvar menu_rev false)
(defvar notification_rev false)
(defvar themes_rev false)
(defvar popup "")

(deflisten backlight :initial "0" "scripts/backlight --get")
(deflisten getvol :initial "0" "scripts/audio --get-vol")
(deflisten audio :initial "{}" "scripts/volume")
(deflisten network :initial "{}" "scripts/network")
(deflisten mpris :initial "{}" "scripts/mpris.py")
(deflisten notifications :initial "{}" "scripts/notifications.py")

(defvar icons '{
    "volume": {
      "true": "",
      "false": ""
    },
    "microphone": {
      "true": "",
      "false": ""
    },
    "network": {
      "up": "",
      "down": ""
    },
    "power": {
      "poweroff": "",
      "reboot": "",
      "suspend": "",
      "exit": "" 
    },
    "bell": {
      "true": "",
      "false": ""
    },
    "light": {
      "true": "",
      "false": ""
    },
    "power-profile": {
      "performance": "",
      "balanced": "",
      "power-saver": ""
    },
    "media": {
      "true": "",
      "false": ""
    }
  }'
)

(defwidget system-slider []
	(box
		:class "slider"
		:orientation "v"
		:space-evenly false 
		(scale 
			:class "menu-volume"
			:value getvol

			:icon {icons.media[audio.output.muted]}
			:action true
			:muted {audio.output.muted}
		)
		(slider 
			:class "menu-volume"
			:value {audio.output.volume} 
			:icon {icons.media[audio.output.muted]}
			:action "volume"
			:launch "pavucontrol &"
			:muted {audio.output.muted}
		)
		(slider 
			:class "menu-brightless" 
			:value backlight 
			:max 101 
			:min 0
			:flipped true 
			:icon "󰃝"
			:onchange "brightnessctl s {}"
		)

	)
)
(defwidget system-progress [data icon css tip]
	(box
		:class "progress"
		(circular-progress
			:class css 
			:value data 
			:thinkness 8 
			:tooltip tip 
			(overlay
				:valign "center"
				(label
					:class "icon"
					:text icon 
				)
			)
		)
	)
)
(defwidget main []
  (box :class "bg" :orientation "h" :space-evenly "false"))


(defwidget sep []
  (box :class "sep" :orientation "h" :space-evenly "false"))

(defwidget system-info []
	(box
		:class "system-info"
		:orientation "v"
		:spacing 15 
		(box 
			:spacing 15
			(system-progress
				:css "cpu"
				:tip "CPU ${round(EWW_CPU.avg,0)}%"
				:data {round(EWW_CPU.avg, 0)}
				:icon ""
			)
			(system-progress
				:css "ram"
				:tip "RAM ${round(EWW_RAM.used_mem / 1073741.824, 2)}MiB"
				:data {round(EWW_RAM.used_mem_perc, 0)}
				:icon ""
			)
			(system-progress
				:css "temp"
				:tip "Temperature ${EWW_TEMPS["AMDGPU_EDGE"]}℃ "
				:data {round(EWW_TEMPS.AMDGPU_EDGE, 0)}
				:icon ""
			)
			(system-progress
				:css "disk"
				:tip "${round(EWW_DISK["/"].used / 1073741824, 1)}GiB"
				:data {round(EWW_DISK["/"].used_perc, 0)}
				:icon ""
			)
		)
	)
)
(defwidget menu-network []
	(box
		:class "network"
		:space-evenly false 
		:spacing 10 
		:hexpand true 
		(box
			:class "indicator"
			:space-evenly false
			:spacing 8 
			:hexpand true 
			(label
				:class "icon ${network.status}"
				:text {icons.network[network.status]}
			)
			(label
				:class "name"
				:text {network.status == "up" ? "Connected" : "Disconnected"}
			)
		)
	)
)

(defwidget notification [notification floating]
  (eventbox
    :class "notification"
    :onmiddleclick "scripts/notifications close ${notification.id}"
    :onhover {
      floating ? 
      "eww update popup=_'${notification.id}' && scripts/notifications pop ${notification.id}" : 
      "eww update popup='${notification.id}'"
    }
    :onhoverlost {
      floating ? 
      "scripts/notifications dismiss ${notification.id}" : 
      "eww update popup=''"
    }
    (box
      :class "content ${notification.urgency}"
      :space-evenly false 
      :orientation "v"
      (box
        :space-evenly false 
        :spacing 10
        (overlay
          :valign "center"
          (box
            :class "image ${notification.appName}"
            :style "background-image: url('${notification.image}')"
            :valign "center"
            :halign "start"
            :visible {notification.image != "null"}
          )
          (box 
            :class "app-icon"
            :style "background-image: url('${notification.appIcon}');" 
            :valign "end"
            :halign "end"
            :visible {notification.appIcon != "null"}
          )
        )
        (box
          :orientation "v"
          :space-evenly false
          :hexpand true
          (box
            :space-evenly false
            :spacing 5
            (label
              :class "summary"
              :limit-width 40
              :wrap true
              :xalign 0
              :visible {notification.summary != "null"}
              :text {notification.summary}
            )
            (box :hexpand true)
            (label 
              :class "time"
              :xalign 1 
              :valign "start"
              :visible {!floating}
              :text {
                ;EWW_TIME - notification.time < 82000 ? 
                formattime(notification.time, "%R", "America/Sao_Paulo") ;:
                ;formattime(notification.time, "%a, %R", "America/Sao_Paulo")
              } 

            )
            (eventbox
              :cursor "pointer"
              (button
                :class "close"
                :valign "start"
                :onclick "scripts/notifications close ${notification.id}"
                ""
              )
            )
          )
          (label
            :class "body"
            :limit-width 120
            :wrap true
            :xalign 0
            :justify "left"
            :text {notification.body}
            :visible {notification.body != "null"}
          )
        )
      )
      (revealer
        :transition "slidedown"
        :duration duration
        :reveal {
          arraylength(notification.actions) != 0 && 
          (floating ?
            (popup == "_${notification.id}") : (popup == notification.id)
          )
        }
        (box
          :class "actions"
          :spacing 10
          (for action in {notification.actions}
            (eventbox 
              :cursor "pointer"
              (button 
                :class "action"
                :onclick "scripts/notifications action ${notification.id} ${action.id}"
                {action.label}
              )
            )
          )
        )
      )
    )
  )
)
(defwidget notification-center []
	(box
		:class "notification_center"
		:orientation "v"
		:space-evenly false 
		(box
			:class "header"
			:space-evenly false 
			:hexpand true 
			(label
				:class "label"
				:text "Notification"
			)
			(revealer
				:reveal {arraylength(notifications.notifications) > 0}
				:transition "crossfade"
				:halign "end"
				:hexpand true 
				(eventbox 
					:cursor "pointer"
					:halign "center"
					:valign "center"
					(button 
						:onclick "scripts/notifications clear"
						:class "clear"
						""
					)
				)
			)
		)
		(scroll
			:class "notification-list"
			:vscroll true 
			:vexpand true 
			(box 
				:space-evenly false
				(box
					:orientation "v"
					:space-evenly false 
					:spacing 10 
					:hexpand true 
					(box 
						:visible {arraylength(notifications.notifications) == 0}
						:class "empty"
						:valign "center"
						:vexpand true 
						:orientation "v"
						:space-evenly false
						:spacing 25 
						(label
							:class "icon"
							:text ""
						)
						(label 
							:class "label"
							:text "No notifications"
						)
					)
					(for i in {notifications.notifications}
						(notification
							:notification i 
							:floating false 
						)
					)
				)
				(box 
					:width 10 
					:visible {arraylength(notifications.notifications) != 0}
				)
			)
		)
	)
)

(defwindow menu 
	:monitor 0
	:stacking "fg"
	:geometry (geometry
		:y "42px"
		:height "5px"
		:anchor "top right"
		)
	(menu) 
)

(defwindow dashboard []
	(revealer
		:transition "slidedown"
		:reveal menu_rev
		:duration duration
		(box
			:class "menu"
			(box
				:class "widget"
				:space-evenly false
				:orientation "v"
				:spacing 15
				(system-slider)
				(box
					:orientation "v"
					:space-evenly false
					:spacing {themes_rev ? 15 : 0}
					(box
						:spacing 15
						(menu-network)
						(scroll
							:class "media-list"
							:vscroll true 
							:visible {arraylength(mpris) > 0}
							:height { 
								arraylength(mpris) == 1 ?
									round(arraylength(mpris) * 215, 0) :
									round(2 * 220, 0)
							}
							(box
								:orientation "v"
								:space-evenly false
								:spacing 10 
								(for i in mpris
									(player :player i)
								)
							)
						)
					(system-info)
					(notification-center)
				)
			)
		)
	)
))

